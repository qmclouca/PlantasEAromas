<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg8">
  <defs
     id="defs2">
    <rect
       x="103.37649"
       y="68.224702"
       width="3.2127976"
       height="14.174107"
       id="rect388" />
    <linearGradient
       id="linearGradient378">
      <stop
         style="stop-color:#008000;stop-opacity:1;"
         offset="0"
         id="stop374" />
      <stop
         style="stop-color:#008000;stop-opacity:0;"
         offset="1"
         id="stop376" />
    </linearGradient>
    <linearGradient
       id="linearGradient284">
      <stop
         style="stop-color:#008000;stop-opacity:1;"
         offset="0"
         id="stop280" />
      <stop
         style="stop-color:#008000;stop-opacity:0;"
         offset="1"
         id="stop282" />
    </linearGradient>
    <style
       id="style84"
       type="text/css"><![CDATA[
    .str2 {stroke:#0099FF;stroke-width:15;stroke-linecap:round}
    .str1 {stroke:#0099FF;stroke-width:30}
    .fil1 {fill:none}
   ]]></style>
    <linearGradient
       xlink:href="#linearGradient284"
       id="linearGradient278"
       x1="343.45187"
       y1="572.75653"
       x2="440.42856"
       y2="813.57141"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.10189525,0,0,0.0962587,17.362332,-3.8922785)" />
    <linearGradient
       xlink:href="#linearGradient378"
       id="linearGradient380"
       x1="573.2616"
       y1="560.63464"
       x2="639.93164"
       y2="490.93414"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(0.10189525,0,0,0.0962587,-0.35405499,18.658635)" />
    <meshgradient
       id="meshgradient1343"
       gradientUnits="userSpaceOnUse"
       x="104.77266"
       y="160.70689"
       gradientTransform="matrix(2.1553738,0,0,2.1553737,-180.18371,-286.63712)">
      <meshrow
         id="meshrow1345">
        <meshpatch
           id="meshpatch1347">
          <stop
             path="c 32.8988,0  65.7976,0  98.6964,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1349" />
          <stop
             path="c 0,3.29782  0,6.59564  0,9.89346"
             style="stop-color:#000000;stop-opacity:1"
             id="stop1351" />
          <stop
             path="c -32.8988,0  -65.7976,0  -98.6964,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop1353" />
          <stop
             path="c 0,-3.29782  0,-6.59564  0,-9.89346"
             style="stop-color:#000000;stop-opacity:1"
             id="stop1355" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     id="layer1"
     style="display:inline">
    <circle
       id="path20"
       style="fill:#000000;stroke:#000000;stroke-width:0.264583"
       cx="5.2916665"
       cy="187.47618"
       r="0.099906191" />
    <circle
       id="path22"
       style="fill:#000000;stroke:#000000;stroke-width:0.264583"
       cx="46.869045"
       cy="198.05951"
       r="0.099906191" />
    <circle
       id="path24"
       style="fill:#000000;stroke:#000000;stroke-width:0.264583"
       cx="21.922617"
       cy="204.10715"
       r="0.099906191" />
    <g
       id="g1364"
       transform="translate(52.916667,6.0476186)">
      <ellipse
         ry="0.036347114"
         rx="0.038475461"
         cy="63.350174"
         cx="39.166748"
         style="fill:#000000;stroke:#000000;stroke-width:0.0990368"
         id="path34" />
      <path
         id="path262"
         d="m 51.297898,79.103798 c -4.562075,-0.791249 -8.063842,-3.191392 -10.025976,-6.871893 -1.54921,-2.905951 -1.810284,-5.899225 -0.77076,-8.837058 0.719362,-2.03302 2.24377,-4.354707 6.222179,-9.47642 3.587089,-4.617942 5.11975,-6.815727 6.711092,-9.623466 l 0.519348,-0.916335 0.420184,0.789475 c 1.435554,2.697234 2.847551,4.728374 7.011624,10.086141 4.110771,5.289174 5.069486,6.763418 5.925995,9.112569 0.5684,1.558952 0.695943,2.347606 0.632676,3.912185 -0.111861,2.766346 -1.099036,5.142794 -3.066859,7.382907 -1.612892,1.836074 -3.755712,3.205082 -6.195714,3.95833 -1.350124,0.416794 -2.418301,0.564957 -4.478451,0.621202 -1.521143,0.04153 -2.004309,0.01863 -2.905338,-0.137637 z m 4.030866,-5.445042 c 0.870939,-0.134775 2.046382,-0.727076 2.800998,-1.411421 1.110647,-1.007219 1.6103,-1.881547 1.822326,-3.188834 0.106931,-0.659297 0.17931,-0.86312 0.321656,-0.905802 0.475168,-0.142469 0.66002,-0.762315 0.347814,-1.16627 -0.129669,-0.167772 -0.301249,-0.192286 -1.543949,-0.22059 -0.910125,-0.02074 -1.398067,-0.06843 -1.398067,-0.136677 0,-0.05766 0.107624,-0.240229 0.239169,-0.40572 0.131544,-0.165488 0.269519,-0.36652 0.30661,-0.44674 0.03709,-0.08022 0.183114,-0.320879 0.324494,-0.534797 0.14138,-0.213918 0.351896,-0.542092 0.467812,-0.729269 0.115916,-0.187178 0.325781,-0.515352 0.46636,-0.72927 0.440087,-0.669666 0.768799,-1.299567 0.768799,-1.473226 0,-0.339069 -0.427663,-0.999564 -0.743616,-1.148461 -0.39169,-0.184591 -0.997408,-0.192759 -1.353471,-0.01826 -0.326975,0.160253 -0.535669,0.409551 -1.029676,1.230014 -0.209307,0.347619 -0.6272,1.011409 -0.928653,1.475092 -0.301454,0.463679 -0.578379,0.90124 -0.615393,0.972358 -0.03701,0.07112 -0.203768,0.326205 -0.37057,0.566864 -0.166801,0.240662 -0.372022,0.568831 -0.456046,0.729273 -0.258355,0.493304 -0.427363,0.632033 -0.769985,0.632033 h -0.326255 l 0.23467,-0.316019 c 0.129072,-0.173807 0.263339,-0.337894 0.298373,-0.364634 0.207261,-0.158193 0.602471,-1.141822 0.755924,-1.881413 0.222027,-1.070074 0.08094,-2.123515 -0.415436,-3.10193 -0.22364,-0.440817 -0.382254,-0.452885 -0.986147,-0.07501 -0.810157,0.506936 -1.537487,1.453539 -1.923003,2.502731 l -0.186408,0.507315 -0.451282,-0.434389 c -0.248207,-0.238912 -0.51257,-0.434385 -0.587479,-0.434385 -0.07491,0 -0.160416,-0.05964 -0.190024,-0.132526 -0.02961,-0.07289 -0.376898,-0.255382 -0.771753,-0.405545 -0.543814,-0.206813 -0.746821,-0.245726 -0.837084,-0.160456 -0.07555,0.07137 -0.120973,0.514492 -0.124108,1.210731 -0.0045,1.005065 0.02018,1.151489 0.291518,1.727211 0.16305,0.345975 0.432574,0.793129 0.598947,0.993681 l 0.30249,0.364635 h -1.015043 c -1.267466,0 -1.472567,0.102558 -1.472567,0.736356 0,0.394558 0.0305,0.447362 0.33864,0.586175 0.324156,0.146027 0.34362,0.186515 0.455003,0.946476 0.120156,0.819796 0.480432,1.698731 0.943218,2.301084 0.505838,0.658388 1.519918,1.507348 2.130037,1.783208 0.335798,0.15183 0.698762,0.320512 0.806583,0.374847 0.489625,0.246745 2.406127,0.346877 3.474574,0.181546 z m -9.377461,-0.86591 c 0.372103,-0.284643 0.303941,-0.669353 -0.248087,-1.400154 -0.561611,-0.743494 -1.237663,-2.059145 -1.413618,-2.751022 -0.06752,-0.265478 -0.122929,-1.00776 -0.123141,-1.649518 -3.05e-4,-1.012421 0.03647,-1.269771 0.278138,-1.944719 0.560617,-1.565737 1.594669,-3.172122 4.39068,-6.820843 2.346692,-3.06237 3.287907,-4.418539 4.008783,-5.776139 0.918659,-1.730075 0.985376,-2.200655 0.34464,-2.430788 -0.540645,-0.194181 -0.714198,-0.04704 -1.364909,1.157202 -0.87419,1.617822 -1.750663,2.947933 -3.150802,4.781565 -0.672728,0.881008 -1.640629,2.148785 -2.150888,2.817283 -3.362867,4.405707 -4.390541,7.022101 -3.811326,9.703387 0.248095,1.148472 0.593232,1.994478 1.211886,2.97058 0.92397,1.457829 1.43577,1.796691 2.028644,1.343166 z"
         style="fill:url(#linearGradient278);fill-opacity:1;stroke-width:0.100042" />
      <a
         id="a1357">
        <path
           style="fill:url(#linearGradient380);fill-opacity:1;stroke-width:0.0353703"
           d="m 53.525446,73.772778 c -0.75106,-0.06714 -0.952304,-0.122113 -1.636279,-0.446961 -0.784588,-0.372635 -1.130719,-0.612355 -1.8045,-1.249736 -0.562025,-0.531661 -0.826783,-0.872975 -1.085305,-1.399124 -0.265589,-0.540535 -0.407018,-1.001267 -0.531563,-1.731657 -0.09784,-0.573823 -0.138582,-0.648983 -0.437172,-0.806612 -0.129964,-0.06861 -0.257621,-0.162711 -0.283682,-0.209115 -0.03197,-0.05693 -0.04342,-0.186207 -0.03518,-0.397382 0.01456,-0.373526 0.06599,-0.468092 0.312594,-0.574732 0.157429,-0.06808 0.241972,-0.07434 1.161448,-0.08599 0.545411,-0.0069 0.991659,-0.02037 0.991659,-0.02991 0,-0.0095 -0.09554,-0.13711 -0.212306,-0.283501 -0.409851,-0.513826 -0.828107,-1.30828 -0.916525,-1.740886 -0.05581,-0.273081 -0.03194,-2.051847 0.02938,-2.188868 0.03627,-0.08106 0.06338,-0.09454 0.190144,-0.09454 0.269665,0 1.339551,0.44457 1.422577,0.591124 0.02075,0.03662 0.111649,0.09652 0.202008,0.133105 0.107941,0.04371 0.313023,0.20407 0.597931,0.467542 0.238502,0.220557 0.442036,0.393082 0.452296,0.38339 0.01026,-0.0097 0.09102,-0.2057 0.179455,-0.435568 0.198737,-0.516553 0.356059,-0.827352 0.617567,-1.220035 0.405092,-0.608293 0.891036,-1.081885 1.444446,-1.40773 0.486381,-0.286379 0.611173,-0.263106 0.83287,0.155328 0.362231,0.683682 0.5315,1.457893 0.4981,2.278242 -0.02398,0.588911 -0.103016,0.990178 -0.315393,1.60116 -0.197892,0.569312 -0.388722,0.915611 -0.746878,1.355358 -0.169397,0.207988 -0.308229,0.391972 -0.308515,0.408856 -9.24e-4,0.05471 0.568165,-0.0022 0.687334,-0.06855 0.131789,-0.07354 0.262097,-0.242157 0.475546,-0.615334 0.08652,-0.151266 0.275489,-0.452932 0.419931,-0.670375 0.244468,-0.368018 1.534657,-2.399264 2.059075,-3.241762 0.468482,-0.752636 0.743392,-1.004339 1.193378,-1.092638 0.244111,-0.0479 0.604977,-0.02388 0.87024,0.05793 0.243491,0.07509 0.513381,0.340117 0.716557,0.703635 0.209353,0.37457 0.203049,0.524655 -0.04205,1.00114 -0.193714,0.376589 -1.600407,2.626763 -2.030402,3.247871 -0.249511,0.360407 -0.343544,0.541877 -0.30141,0.581678 0.05516,0.05211 0.388612,0.0813 1.318978,0.115459 1.384153,0.05082 1.494107,0.06812 1.615887,0.254265 0.249246,0.380977 0.106146,0.901753 -0.296974,1.080759 -0.207867,0.09231 -0.253535,0.195899 -0.374547,0.849641 -0.148614,0.802865 -0.273973,1.19508 -0.543954,1.70187 -0.259402,0.486934 -0.532248,0.830093 -1.088969,1.369598 -0.986533,0.956026 -2.177811,1.541899 -3.363815,1.654327 -0.42849,0.04062 -1.472929,0.03992 -1.933974,-0.0015 z m -2.024973,-7.142663 c -0.0029,-0.101056 -0.02336,-0.200839 -0.04549,-0.221737 -0.02213,-0.02092 -0.04022,-0.06585 -0.04022,-0.09988 0,-0.04854 -0.02941,-0.06193 -0.136468,-0.06212 -0.07506,-9.9e-5 -0.247042,-0.01011 -0.382189,-0.02216 -0.201123,-0.01794 -0.238294,-0.03038 -0.204794,-0.06851 0.02912,-0.03314 0.139451,-0.04659 0.38219,-0.04659 0.248718,0 0.341275,-0.01164 0.341314,-0.04297 2.9e-5,-0.02365 -0.045,-0.131722 -0.100076,-0.240197 l -0.100129,-0.197222 -0.370862,-3.64e-4 c -0.207438,-2.87e-4 -0.380773,-0.01561 -0.393352,-0.03482 -0.01237,-0.01892 -0.07884,-0.03438 -0.147713,-0.03438 -0.100961,0 -0.125221,-0.01332 -0.125221,-0.06876 0,-0.05959 0.02426,-0.06876 0.181955,-0.06876 0.100077,0 0.181957,0.01452 0.181957,0.03227 0,0.04516 0.297712,0.08251 0.433337,0.05437 0.118186,-0.02452 0.150858,-0.09977 0.05794,-0.133454 -0.03002,-0.01088 -0.05459,-0.04108 -0.05459,-0.0671 0,-0.02601 -0.03275,-0.07532 -0.07278,-0.109544 -0.04003,-0.03423 -0.07278,-0.08414 -0.07278,-0.110915 0,-0.118934 -0.115652,-0.163883 -0.452236,-0.175769 -0.181595,-0.0064 -0.345731,-0.02576 -0.364746,-0.04297 -0.01901,-0.01721 -0.06151,-0.03132 -0.09444,-0.03132 -0.07038,0 -0.191494,-0.115496 -0.156136,-0.148897 0.03839,-0.03627 0.230557,-0.02678 0.230557,0.01139 0,0.01892 0.03275,0.03438 0.07278,0.03438 0.04003,0 0.07278,0.01546 0.07278,0.03438 0,0.0191 0.09704,0.03438 0.218346,0.03438 0.169826,0 0.218348,-0.01146 0.218348,-0.05157 0,-0.02838 -0.01638,-0.05157 -0.03639,-0.05157 -0.02001,0 -0.03639,-0.03868 -0.03639,-0.08594 0,-0.04727 -0.01638,-0.08595 -0.03639,-0.08595 -0.02002,0 -0.03639,-0.03894 -0.03639,-0.08652 0,-0.05767 -0.05461,-0.13596 -0.163759,-0.234757 -0.182661,-0.165335 -0.211887,-0.263149 -0.07863,-0.263149 0.104043,0 0.351562,0.241316 0.351562,0.342751 0,0.03889 0.01518,0.09758 0.03373,0.130416 0.01855,0.03282 0.04261,0.08676 0.05345,0.119854 0.0271,0.08273 0.137508,0.07547 0.21897,-0.01441 0.05363,-0.05917 0.05909,-0.08741 0.02647,-0.136768 -0.03234,-0.04892 -0.02622,-0.08728 0.02869,-0.179621 0.0384,-0.06458 0.07516,-0.161606 0.0817,-0.215606 0.0084,-0.06911 0.0346,-0.10125 0.0886,-0.108533 0.07154,-0.0096 0.07555,0.002 0.05942,0.17189 -0.0095,0.100231 -0.03176,0.196936 -0.04942,0.214897 -0.01767,0.01797 -0.03212,0.08371 -0.03212,0.146107 0,0.0624 -0.01322,0.113448 -0.02939,0.113448 -0.01616,0 -0.05714,0.05943 -0.09107,0.132064 -0.0578,0.123754 -0.05783,0.139438 -6.16e-4,0.24924 0.0336,0.06445 0.09095,0.142196 0.127458,0.172779 0.0365,0.0306 0.06692,0.06925 0.06759,0.08595 7.31e-4,0.0167 0.03456,0.06819 0.07531,0.114451 0.06147,0.06977 0.08002,0.07563 0.108826,0.03438 0.0191,-0.02736 0.02541,-0.08841 0.01404,-0.135677 -0.01138,-0.04727 -0.03562,-0.147828 -0.05386,-0.223457 -0.01825,-0.07563 -0.03389,-0.187793 -0.03476,-0.249244 -0.0013,-0.08931 0.01302,-0.111727 0.0712,-0.111727 0.06522,0 0.07278,0.02292 0.07278,0.22059 0,0.145918 0.0154,0.225444 0.04549,0.234917 0.03047,0.0096 0.04549,0.09187 0.04549,0.249241 0,0.157378 -0.01502,0.239647 -0.04549,0.249244 -0.06298,0.01983 -0.05709,0.100165 0.0091,0.124162 0.03002,0.01088 0.05459,0.04348 0.05459,0.07243 0,0.02896 0.01637,0.05265 0.03639,0.05265 0.02001,0 0.03639,0.02321 0.03639,0.05157 0,0.08023 0.123751,0.06074 0.218346,-0.03438 0.04701,-0.04727 0.115367,-0.08595 0.151908,-0.08595 0.05547,0 0.06644,-0.02838 0.06644,-0.17189 0,-0.09454 -0.01638,-0.171891 -0.03639,-0.171891 -0.05249,0 -0.04487,-0.09451 0.0091,-0.112901 0.02502,-0.0085 0.09052,0.009 0.145565,0.03893 0.07593,0.04129 0.100076,0.08065 0.100076,0.163123 0,0.05979 -0.02456,0.12796 -0.05459,0.151499 -0.03002,0.02354 -0.05459,0.06411 -0.05459,0.09016 0,0.02605 -0.01361,0.04735 -0.03024,0.04735 -0.01663,0 -0.05215,0.03868 -0.07893,0.08595 -0.02678,0.04727 -0.07771,0.08595 -0.113176,0.08595 -0.03547,0 -0.07461,0.01546 -0.08698,0.03438 -0.01237,0.01892 -0.07065,0.03438 -0.129517,0.03438 -0.09476,0 -0.107026,0.01186 -0.107026,0.103602 0,0.09959 0.01043,0.129823 0.103491,0.299876 0.02314,0.04229 0.04207,0.154442 0.04207,0.249241 v 0.172356 h 0.436694 0.436695 l -9.25e-4,-0.197674 c -5e-4,-0.108721 -0.01866,-0.259554 -0.0404,-0.335187 -0.02174,-0.07563 -0.04751,-0.207126 -0.05725,-0.292214 -0.0097,-0.08508 -0.0325,-0.169399 -0.05057,-0.18736 -0.01807,-0.01797 -0.03286,-0.0828 -0.03286,-0.144077 0,-0.06128 -0.01638,-0.120982 -0.03639,-0.132668 -0.02001,-0.01168 -0.03639,-0.05663 -0.03639,-0.09988 0,-0.07778 -0.04917,-0.181193 -0.181337,-0.38141 -0.03744,-0.05673 -0.06928,-0.130208 -0.07074,-0.163297 -0.0015,-0.03311 -0.01904,-0.06016 -0.03905,-0.06016 -0.02001,0 -0.03639,-0.03092 -0.03639,-0.06876 0,-0.03782 -0.01451,-0.06876 -0.03225,-0.06876 -0.01773,0 -0.05944,-0.05415 -0.09268,-0.120324 -0.03324,-0.06618 -0.07328,-0.120323 -0.08897,-0.120323 -0.01569,0 -0.05097,-0.04254 -0.07839,-0.09454 -0.06617,-0.125471 -0.823703,-0.833667 -0.891742,-0.833667 -0.02929,0 -0.05326,-0.01547 -0.05326,-0.03438 0,-0.01891 -0.02866,-0.03439 -0.06368,-0.03442 -0.07442,-4.9e-5 -0.263835,-0.14481 -0.263835,-0.201632 0,-0.02144 -0.03733,-0.03897 -0.08295,-0.03897 -0.04562,0 -0.10655,-0.03094 -0.135402,-0.06876 -0.02885,-0.03782 -0.08115,-0.06876 -0.116213,-0.06876 -0.03506,0 -0.150175,-0.03716 -0.255802,-0.08258 -0.341794,-0.146976 -0.337602,-0.148363 -0.393389,0.130184 -0.08834,0.441095 -0.03949,1.492333 0.07096,1.527113 0.02167,0.0068 0.0394,0.05256 0.0394,0.101642 0,0.159637 0.215313,0.654084 0.426172,0.97867 0.04582,0.07053 0.0833,0.14833 0.0833,0.172894 0,0.02456 0.03275,0.06696 0.07278,0.09422 0.04003,0.02725 0.07278,0.07118 0.07278,0.09761 0,0.02641 0.162418,0.201592 0.360931,0.389254 l 0.360931,0.341205 0.285012,-0.01008 0.285012,-0.01008 z m 2.158648,0.118934 c 0.158008,-0.125949 0.484975,-0.440646 0.484975,-0.466775 0,-0.01281 0.05352,-0.08408 0.118937,-0.158386 0.06541,-0.07431 0.141873,-0.17765 0.169909,-0.229646 0.02804,-0.052 0.06367,-0.09454 0.0792,-0.09454 0.01552,0 0.112903,-0.166306 0.2164,-0.369564 0.103498,-0.203262 0.202662,-0.374723 0.220366,-0.381025 0.0177,-0.0063 0.03219,-0.05567 0.03219,-0.1097 0,-0.05403 0.01637,-0.107801 0.03639,-0.119487 0.02002,-0.01168 0.03639,-0.06583 0.03639,-0.120324 0,-0.05449 0.01465,-0.107626 0.03255,-0.118079 0.03307,-0.01932 0.05635,-0.136091 0.106185,-0.532672 0.01528,-0.121564 0.04763,-0.227278 0.07189,-0.234918 0.07062,-0.02224 0.0611,-0.925237 -0.01047,-0.992849 -0.03612,-0.03412 -0.05459,-0.119825 -0.05459,-0.253351 0,-0.110981 -0.01638,-0.211345 -0.03639,-0.223031 -0.02002,-0.01168 -0.03639,-0.07357 -0.03639,-0.137512 0,-0.06395 -0.01637,-0.125826 -0.03639,-0.137512 -0.02002,-0.01169 -0.03639,-0.05755 -0.03639,-0.101915 0,-0.04437 -0.03153,-0.140143 -0.07006,-0.212835 -0.121833,-0.229825 -0.184675,-0.365168 -0.184675,-0.397739 0,-0.01735 -0.02627,-0.05637 -0.05837,-0.0867 -0.04677,-0.04418 -0.07199,-0.04711 -0.126876,-0.01474 -0.03768,0.02223 -0.085,0.04041 -0.105173,0.04041 -0.02017,0 -0.111424,0.06962 -0.202786,0.154701 -0.09136,0.08509 -0.183555,0.154702 -0.204873,0.154702 -0.04705,0 -0.502825,0.429835 -0.502825,0.474211 0,0.01731 -0.07369,0.10311 -0.163761,0.190655 -0.09007,0.08754 -0.16376,0.179196 -0.16376,0.203668 0,0.02447 -0.03275,0.0668 -0.07278,0.09405 -0.04003,0.02726 -0.07278,0.07083 -0.07278,0.09682 0,0.02599 -0.0304,0.08833 -0.06757,0.138518 -0.13536,0.182803 -0.391356,0.741992 -0.431298,0.94211 -0.01038,0.052 -0.03339,0.09454 -0.05113,0.09454 -0.01774,0 -0.03226,0.04452 -0.03226,0.09894 0,0.05442 -0.02456,0.154475 -0.05459,0.222355 -0.03002,0.06788 -0.05459,0.177148 -0.05459,0.242816 0,0.06567 -0.01637,0.12896 -0.03639,0.140646 -0.05894,0.03442 -0.04236,0.11276 0.05459,0.257834 0.05004,0.07488 0.09098,0.159659 0.09098,0.188397 0,0.02874 0.01637,0.05225 0.03639,0.05225 0.02001,0 0.03691,0.03482 0.03755,0.07735 6.17e-4,0.04255 0.0252,0.10738 0.05459,0.144085 0.02939,0.0367 0.05343,0.101536 0.05343,0.144077 0,0.04254 0.01637,0.08691 0.03639,0.09859 0.02002,0.01168 0.03691,0.07835 0.03755,0.148137 0.0017,0.188662 0.140097,0.328243 0.193959,0.195644 0.01152,-0.02838 0.04296,-0.05157 0.06987,-0.05157 0.0685,0 0.244493,-0.180764 0.244493,-0.251121 0,-0.03536 -0.02862,-0.05828 -0.07278,-0.05828 -0.05003,0 -0.07278,-0.02292 -0.07278,-0.07332 0,-0.04032 -0.03056,-0.09835 -0.0679,-0.12895 -0.03734,-0.0306 -0.07959,-0.105895 -0.09387,-0.167328 -0.01428,-0.06143 -0.04104,-0.111694 -0.05947,-0.111694 -0.01842,0 -0.0335,-0.116027 -0.0335,-0.257838 0,-0.195851 0.01203,-0.257834 0.05004,-0.257834 0.05368,0 0.09553,0.144052 0.09553,0.328858 0,0.0627 0.01638,0.123561 0.03639,0.135247 0.02001,0.01168 0.03639,0.06197 0.03639,0.111756 0,0.06162 0.04744,0.132307 0.148616,0.221431 0.165235,0.145554 0.249144,0.164716 0.277218,0.0633 0.01029,-0.03719 0.0497,-0.07691 0.08757,-0.08826 0.03787,-0.01135 0.06885,-0.03662 0.06885,-0.05614 0,-0.01954 0.05732,-0.08964 0.127369,-0.155821 0.09561,-0.09033 0.127369,-0.149465 0.127369,-0.237209 0,-0.09397 -0.01427,-0.116886 -0.07278,-0.116886 -0.04003,0 -0.07278,-0.01546 -0.07278,-0.03438 0,-0.01892 -0.05732,-0.03438 -0.127369,-0.03438 -0.07005,0 -0.127369,-0.01615 -0.127369,-0.03594 0,-0.04667 -0.167293,-0.204706 -0.216692,-0.204706 -0.02093,0 -0.03805,-0.03888 -0.03805,-0.08641 0,-0.08321 -0.01146,-0.114506 -0.10349,-0.28269 -0.02314,-0.04229 -0.04207,-0.105636 -0.04207,-0.140778 0,-0.03514 -0.03275,-0.0919 -0.07278,-0.126118 -0.07616,-0.06511 -0.101421,-0.257836 -0.03379,-0.257836 0.06422,0 0.142966,0.09333 0.142966,0.169435 0,0.03917 0.01638,0.07121 0.03639,0.07121 0.02002,0 0.03639,0.04641 0.03639,0.103135 0,0.05672 0.01518,0.103134 0.03373,0.103134 0.04658,0 0.14823,0.200364 0.14823,0.292168 0,0.09311 0.210612,0.257885 0.329626,0.257885 0.02172,0 0.06405,0.02321 0.09407,0.05157 0.03002,0.02838 0.102544,0.05157 0.161161,0.05157 0.09368,0 0.106574,-0.01222 0.106574,-0.101107 0,-0.05561 0.01448,-0.109563 0.03219,-0.119898 0.01771,-0.01033 0.0438,-0.09247 0.05799,-0.182518 0.01419,-0.09004 0.04248,-0.182859 0.06286,-0.206252 0.05336,-0.06125 0.0073,-0.146546 -0.07912,-0.146546 -0.04066,0 -0.07392,-0.01547 -0.07392,-0.03438 0,-0.01891 -0.04094,-0.03438 -0.09098,-0.03438 -0.05004,0 -0.09098,-0.01547 -0.09098,-0.03438 0,-0.01891 -0.03275,-0.03438 -0.07278,-0.03438 -0.04043,0 -0.07278,-0.02292 -0.07278,-0.05157 0,-0.02836 -0.01856,-0.05157 -0.04125,-0.05157 -0.02269,0 -0.07999,-0.04254 -0.127325,-0.09454 -0.06868,-0.07543 -0.08608,-0.134077 -0.08611,-0.290185 -2.4e-5,-0.107605 -0.01642,-0.205207 -0.03644,-0.216893 -0.0201,-0.01174 -0.03639,-0.166517 -0.03639,-0.345809 0,-0.323282 4.24e-4,-0.324563 0.09098,-0.324563 0.06579,0 0.09098,0.01847 0.09098,0.06673 0,0.0367 -0.01638,0.07629 -0.03639,0.08797 -0.04471,0.0261 -0.04874,0.41846 -0.0046,0.444252 0.01751,0.01022 0.03915,0.102008 0.0481,0.20397 0.01434,0.163326 0.03295,0.199198 0.156424,0.301443 0.07708,0.06383 0.160712,0.135394 0.185841,0.159029 0.02513,0.02363 0.08698,0.04297 0.137458,0.04297 0.05047,0 0.10866,0.02707 0.129303,0.06016 0.06163,0.09878 0.110451,-0.01238 0.11109,-0.25295 5.01e-4,-0.173695 -0.02145,-0.249862 -0.126811,-0.440818 -0.07005,-0.126964 -0.127369,-0.252924 -0.127369,-0.279912 0,-0.02699 -0.01638,-0.04907 -0.03639,-0.04907 -0.02002,0 -0.03639,-0.02321 -0.03639,-0.05157 0,-0.03167 0.03408,-0.05157 0.08831,-0.05157 0.06272,0 0.104907,0.03142 0.145566,0.108416 0.03149,0.05963 0.05725,0.129244 0.05725,0.154701 0,0.02546 0.01638,0.04628 0.03639,0.04628 0.02002,0 0.03639,0.04452 0.03639,0.09893 0,0.05441 0.02456,0.118184 0.05459,0.141722 0.04142,0.03247 0.05459,0.120557 0.05459,0.365179 0,0.30317 0.0045,0.322383 0.07538,0.322383 0.09654,0 0.179356,-0.07824 0.179356,-0.169434 0,-0.05621 0.02301,-0.07121 0.109174,-0.07121 0.0838,0 0.109173,0.0155 0.109173,0.06673 0,0.0367 -0.01637,0.07629 -0.03639,0.08797 -0.02001,0.01168 -0.03639,0.07234 -0.03639,0.134794 v 0.113548 l -0.244061,0.02362 c -0.134233,0.01299 -0.265241,0.04023 -0.291128,0.06053 -0.02589,0.0203 -0.04707,0.09597 -0.04707,0.168176 0,0.0722 -0.01637,0.140835 -0.03639,0.152521 -0.02002,0.01168 -0.03639,0.05949 -0.03639,0.10624 0,0.105353 0.102913,0.150073 0.163937,0.07123 0.02433,-0.03143 0.0795,-0.05715 0.122601,-0.05715 0.0431,0 0.110146,-0.01877 0.148995,-0.04167 0.03885,-0.02292 0.08232,-0.03063 0.0966,-0.01713 0.04302,0.04064 -0.0664,0.19632 -0.137984,0.19632 -0.03665,0 -0.06663,0.01546 -0.06663,0.03438 0,0.01892 -0.04094,0.03438 -0.09098,0.03438 -0.05004,0 -0.09098,0.01546 -0.09098,0.03438 0,0.01892 -0.07369,0.03438 -0.16376,0.03438 -0.158095,0 -0.16376,0.0036 -0.16376,0.10428 0,0.07334 -0.03779,0.13998 -0.127369,0.224603 -0.07005,0.06618 -0.127369,0.141723 -0.127369,0.167881 0,0.02616 -0.01928,0.05363 -0.04284,0.06104 -0.0249,0.0079 -0.03071,0.03202 -0.01389,0.05774 0.03036,0.0464 0.112549,0.03923 0.366045,-0.03194 0.199529,-0.05603 0.353896,-0.05924 0.372579,-0.0077 0.0086,0.02365 -0.0086,0.04297 -0.03813,0.04297 -0.02955,0 -0.06315,0.02321 -0.07467,0.05157 -0.01376,0.03387 -0.07058,0.05157 -0.165507,0.05157 -0.07951,0 -0.154679,0.01546 -0.167049,0.03438 -0.01237,0.01892 -0.08703,0.03438 -0.165909,0.03438 -0.07888,0 -0.143416,0.01546 -0.143416,0.03438 0,0.01892 -0.05732,0.03438 -0.127369,0.03438 -0.07005,0 -0.127369,0.01546 -0.127369,0.03438 0,0.01892 -0.02737,0.03438 -0.06082,0.03438 -0.03345,0 -0.131435,0.06962 -0.217735,0.154704 -0.11807,0.116406 -0.184087,0.154701 -0.266696,0.154701 -0.10085,0 -0.109786,0.0096 -0.109786,0.118293 0,0.06506 0.01638,0.127855 0.03639,0.13954 0.02001,0.01168 0.03639,0.144099 0.03639,0.294245 v 0.272997 h 0.306533 c 0.270018,0 0.318786,-0.0098 0.409399,-0.082 z"
           id="path364" />
      </a>
    </g>
    <text
       xml:space="preserve"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:27.1051px;line-height:1.25;font-family:'Eras Bold ITC';-inkscape-font-specification:'Eras Bold ITC, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;opacity:1;fill:#004100;fill-opacity:1;stroke:url(#meshgradient1343);stroke-width:0.677633"
       x="45.277901"
       y="78.349335"
       id="text384"
       transform="scale(0.65522079,1.5262031)"><tspan
         id="tspan382"
         x="45.277901"
         y="78.349335"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:27.1051px;font-family:'Eras Bold ITC';-inkscape-font-specification:'Eras Bold ITC, Normal';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#004100;fill-opacity:1;stroke:url(#meshgradient1343);stroke-width:0.677633">Plantas &amp; Aromas</tspan></text>
    <text
       xml:space="preserve"
       id="text386"
       style="fill:black;fill-opacity:1;line-height:1.25;stroke:none;font-family:sans-serif;font-style:normal;font-weight:normal;font-size:10.58333333px;white-space:pre;shape-inside:url(#rect388);" />
  </g>
  <script
     type="text/javascript"
     id="mesh_polyfill">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
